{"version":3,"sources":["$_lazy_route_resource lazy namespace object","node_modules/@ionic/core/dist/esm lazy ^\\.\\/.*\\.entry\\.js$ include: \\.entry\\.js$ exclude: \\.system\\.entry\\.js$ namespace object","src/app/app-container/app-container.component.html","src/app/app.component.html","node_modules/tslib/tslib.es6.js","src/app/app-container/app-container.component.scss","src/app/app-container/app-container.component.ts","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/app/shared/sdk/api.module.ts","src/app/shared/sdk/api/api.ts","src/app/shared/sdk/api/geolocationController.service.ts","src/app/shared/sdk/api/leaveRequestController.service.ts","src/app/shared/sdk/api/patientController.service.ts","src/app/shared/sdk/api/pingController.service.ts","src/app/shared/sdk/configuration.ts","src/app/shared/sdk/encoder.ts","src/app/shared/sdk/variables.ts","src/app/shared/sdkconfiguration.provider.ts","src/app/shared/services/patient.service.ts","src/app/shared/utils/apifilter.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./ion-action-sheet-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet-ios.entry.js\",\n\t\t\"common\",\n\t\t0\n\t],\n\t\"./ion-action-sheet-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-action-sheet-md.entry.js\",\n\t\t\"common\",\n\t\t1\n\t],\n\t\"./ion-alert-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert-ios.entry.js\",\n\t\t\"common\",\n\t\t2\n\t],\n\t\"./ion-alert-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-alert-md.entry.js\",\n\t\t\"common\",\n\t\t3\n\t],\n\t\"./ion-app_8-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8-ios.entry.js\",\n\t\t\"common\",\n\t\t4\n\t],\n\t\"./ion-app_8-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-app_8-md.entry.js\",\n\t\t\"common\",\n\t\t5\n\t],\n\t\"./ion-avatar_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3-ios.entry.js\",\n\t\t\"common\",\n\t\t6\n\t],\n\t\"./ion-avatar_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-avatar_3-md.entry.js\",\n\t\t\"common\",\n\t\t7\n\t],\n\t\"./ion-back-button-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button-ios.entry.js\",\n\t\t\"common\",\n\t\t8\n\t],\n\t\"./ion-back-button-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-back-button-md.entry.js\",\n\t\t\"common\",\n\t\t9\n\t],\n\t\"./ion-backdrop-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop-ios.entry.js\",\n\t\t10\n\t],\n\t\"./ion-backdrop-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-backdrop-md.entry.js\",\n\t\t11\n\t],\n\t\"./ion-button_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2-ios.entry.js\",\n\t\t\"common\",\n\t\t12\n\t],\n\t\"./ion-button_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-button_2-md.entry.js\",\n\t\t\"common\",\n\t\t13\n\t],\n\t\"./ion-card_5-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5-ios.entry.js\",\n\t\t\"common\",\n\t\t14\n\t],\n\t\"./ion-card_5-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-card_5-md.entry.js\",\n\t\t\"common\",\n\t\t15\n\t],\n\t\"./ion-checkbox-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox-ios.entry.js\",\n\t\t\"common\",\n\t\t16\n\t],\n\t\"./ion-checkbox-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-checkbox-md.entry.js\",\n\t\t\"common\",\n\t\t17\n\t],\n\t\"./ion-chip-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip-ios.entry.js\",\n\t\t\"common\",\n\t\t18\n\t],\n\t\"./ion-chip-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-chip-md.entry.js\",\n\t\t\"common\",\n\t\t19\n\t],\n\t\"./ion-col_3.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-col_3.entry.js\",\n\t\t20\n\t],\n\t\"./ion-datetime_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3-ios.entry.js\",\n\t\t\"common\",\n\t\t21\n\t],\n\t\"./ion-datetime_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-datetime_3-md.entry.js\",\n\t\t\"common\",\n\t\t22\n\t],\n\t\"./ion-fab_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3-ios.entry.js\",\n\t\t\"common\",\n\t\t23\n\t],\n\t\"./ion-fab_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-fab_3-md.entry.js\",\n\t\t\"common\",\n\t\t24\n\t],\n\t\"./ion-img.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-img.entry.js\",\n\t\t25\n\t],\n\t\"./ion-infinite-scroll_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2-ios.entry.js\",\n\t\t\"common\",\n\t\t26\n\t],\n\t\"./ion-infinite-scroll_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-infinite-scroll_2-md.entry.js\",\n\t\t\"common\",\n\t\t27\n\t],\n\t\"./ion-input-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input-ios.entry.js\",\n\t\t\"common\",\n\t\t28\n\t],\n\t\"./ion-input-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-input-md.entry.js\",\n\t\t\"common\",\n\t\t29\n\t],\n\t\"./ion-item-option_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3-ios.entry.js\",\n\t\t\"common\",\n\t\t30\n\t],\n\t\"./ion-item-option_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item-option_3-md.entry.js\",\n\t\t\"common\",\n\t\t31\n\t],\n\t\"./ion-item_8-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8-ios.entry.js\",\n\t\t\"common\",\n\t\t32\n\t],\n\t\"./ion-item_8-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-item_8-md.entry.js\",\n\t\t\"common\",\n\t\t33\n\t],\n\t\"./ion-loading-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading-ios.entry.js\",\n\t\t\"common\",\n\t\t34\n\t],\n\t\"./ion-loading-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-loading-md.entry.js\",\n\t\t\"common\",\n\t\t35\n\t],\n\t\"./ion-menu_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3-ios.entry.js\",\n\t\t\"common\",\n\t\t36\n\t],\n\t\"./ion-menu_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-menu_3-md.entry.js\",\n\t\t\"common\",\n\t\t37\n\t],\n\t\"./ion-modal-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal-ios.entry.js\",\n\t\t\"common\",\n\t\t38\n\t],\n\t\"./ion-modal-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-modal-md.entry.js\",\n\t\t\"common\",\n\t\t39\n\t],\n\t\"./ion-nav_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js\",\n\t\t\"common\",\n\t\t40\n\t],\n\t\"./ion-popover-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover-ios.entry.js\",\n\t\t\"common\",\n\t\t41\n\t],\n\t\"./ion-popover-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-popover-md.entry.js\",\n\t\t\"common\",\n\t\t42\n\t],\n\t\"./ion-progress-bar-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar-ios.entry.js\",\n\t\t\"common\",\n\t\t43\n\t],\n\t\"./ion-progress-bar-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-progress-bar-md.entry.js\",\n\t\t\"common\",\n\t\t44\n\t],\n\t\"./ion-radio_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2-ios.entry.js\",\n\t\t\"common\",\n\t\t45\n\t],\n\t\"./ion-radio_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-radio_2-md.entry.js\",\n\t\t\"common\",\n\t\t46\n\t],\n\t\"./ion-range-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range-ios.entry.js\",\n\t\t\"common\",\n\t\t47\n\t],\n\t\"./ion-range-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-range-md.entry.js\",\n\t\t\"common\",\n\t\t48\n\t],\n\t\"./ion-refresher_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2-ios.entry.js\",\n\t\t\"common\",\n\t\t49\n\t],\n\t\"./ion-refresher_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-refresher_2-md.entry.js\",\n\t\t\"common\",\n\t\t50\n\t],\n\t\"./ion-reorder_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2-ios.entry.js\",\n\t\t\"common\",\n\t\t51\n\t],\n\t\"./ion-reorder_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-reorder_2-md.entry.js\",\n\t\t\"common\",\n\t\t52\n\t],\n\t\"./ion-ripple-effect.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-ripple-effect.entry.js\",\n\t\t53\n\t],\n\t\"./ion-route_4.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js\",\n\t\t\"common\",\n\t\t54\n\t],\n\t\"./ion-searchbar-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar-ios.entry.js\",\n\t\t\"common\",\n\t\t55\n\t],\n\t\"./ion-searchbar-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-searchbar-md.entry.js\",\n\t\t\"common\",\n\t\t56\n\t],\n\t\"./ion-segment_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2-ios.entry.js\",\n\t\t\"common\",\n\t\t57\n\t],\n\t\"./ion-segment_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-segment_2-md.entry.js\",\n\t\t\"common\",\n\t\t58\n\t],\n\t\"./ion-select_3-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3-ios.entry.js\",\n\t\t\"common\",\n\t\t59\n\t],\n\t\"./ion-select_3-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-select_3-md.entry.js\",\n\t\t\"common\",\n\t\t60\n\t],\n\t\"./ion-slide_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2-ios.entry.js\",\n\t\t61\n\t],\n\t\"./ion-slide_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-slide_2-md.entry.js\",\n\t\t62\n\t],\n\t\"./ion-spinner.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-spinner.entry.js\",\n\t\t\"common\",\n\t\t63\n\t],\n\t\"./ion-split-pane-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane-ios.entry.js\",\n\t\t64\n\t],\n\t\"./ion-split-pane-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-split-pane-md.entry.js\",\n\t\t65\n\t],\n\t\"./ion-tab-bar_2-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2-ios.entry.js\",\n\t\t\"common\",\n\t\t66\n\t],\n\t\"./ion-tab-bar_2-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab-bar_2-md.entry.js\",\n\t\t\"common\",\n\t\t67\n\t],\n\t\"./ion-tab_2.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-tab_2.entry.js\",\n\t\t\"common\",\n\t\t68\n\t],\n\t\"./ion-text.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-text.entry.js\",\n\t\t\"common\",\n\t\t69\n\t],\n\t\"./ion-textarea-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea-ios.entry.js\",\n\t\t\"common\",\n\t\t70\n\t],\n\t\"./ion-textarea-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-textarea-md.entry.js\",\n\t\t\"common\",\n\t\t71\n\t],\n\t\"./ion-toast-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast-ios.entry.js\",\n\t\t\"common\",\n\t\t72\n\t],\n\t\"./ion-toast-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toast-md.entry.js\",\n\t\t\"common\",\n\t\t73\n\t],\n\t\"./ion-toggle-ios.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle-ios.entry.js\",\n\t\t\"common\",\n\t\t74\n\t],\n\t\"./ion-toggle-md.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-toggle-md.entry.js\",\n\t\t\"common\",\n\t\t75\n\t],\n\t\"./ion-virtual-scroll.entry.js\": [\n\t\t\"./node_modules/@ionic/core/dist/esm/ion-virtual-scroll.entry.js\",\n\t\t76\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./node_modules/@ionic/core/dist/esm lazy recursive ^\\\\.\\\\/.*\\\\.entry\\\\.js$ include: \\\\.entry\\\\.js$ exclude: \\\\.system\\\\.entry\\\\.js$\";\nmodule.exports = webpackAsyncContext;","export default \"<ion-menu side=\\\"start\\\" menuId=\\\"menu\\\" contentId=\\\"main\\\">\\n    <ion-header>\\n        <ion-list>\\n            <div class=\\\"menu-item-header menu-separator\\\" (click)=\\\"goToHome()\\\">\\n                <div class=\\\"circle circle-gray\\\">A</div>\\n                <div class=\\\"patient-name-in-menu\\\">{{patientName}}</div>\\n            </div>\\n        </ion-list>\\n    </ion-header>\\n    <ion-content>\\n        <ion-list>\\n            <div *ngIf=\\\"leaveStatus == null || leaveStatus == 1\\\" class=\\\"menu-item menu-separator\\\" (click)=\\\"goToRequestLeaveHome()\\\"><img class=\\\"button-icon filter-black\\\" src=\\\"/assets/icons/svg/icon-salir-casa.svg\\\">&nbsp;&nbsp;&nbsp;<ng-container i18n=\\\"@@ImGoingLeaveHomeMenuLabel\\\">Voy a salir de casa</ng-container></div>\\n            <div *ngIf=\\\"leaveStatus == 2\\\" class=\\\"menu-item menu-separator\\\" (click)=\\\"setAtHome()\\\"><img class=\\\"button-icon filter-black\\\" src=\\\"/assets/icons/svg/icon-volver-casa.svg\\\">&nbsp;&nbsp;&nbsp;<ng-container i18n=\\\"@@IWentBackToHomeMenuLabel\\\">He vuelto a casa</ng-container></div>\\n            <div class=\\\"menu-item\\\" (click)=\\\"goToAutotest()\\\"><img class=\\\"button-icon filter-black\\\" src=\\\"/assets/icons/svg/icon-test.svg\\\">&nbsp;&nbsp;&nbsp;<ng-container i18n=\\\"@@autotestMenuLabel\\\">¿Tengo el coronavirus?</ng-container></div>\\n            <div class=\\\"menu-item\\\" (click)=\\\"goToCoronavirusInfo()\\\"><img class=\\\"button-icon filter-black\\\" src=\\\"/assets/icons/svg/icon-info.svg\\\">&nbsp;&nbsp;&nbsp;<ng-container i18n=\\\"@@coronavirusInfoMenuLabel\\\">Información sobre el coronavirus</ng-container></div>\\n        </ion-list>\\n    </ion-content>\\n    <ion-toolbar>\\n        <ion-list>\\n            <div class=\\\"menu-item\\\" (click)=\\\"goToMyInfo()\\\"><img class=\\\"button-icon filter-black\\\" src=\\\"/assets/icons/svg/icon-usuario.svg\\\">&nbsp;&nbsp;&nbsp;<ng-container i18n=\\\"@@myInfoMenuLabel\\\">Mis datos</ng-container></div>\\n            <div class=\\\"menu-item\\\" (click)=\\\"share()\\\"><img class=\\\"button-icon filter-green\\\" src=\\\"/assets/icons/svg/whatsapp.svg\\\">&nbsp;&nbsp;&nbsp;<ng-container i18n=\\\"@@shareMenuLabel\\\">Compartir App<br />para luchar juntos</ng-container></div>\\n        </ion-list>\\n    </ion-toolbar>\\n</ion-menu>\\n\\n<!-- the main content -->\\n<ion-router-outlet class=\\\"app-router-outlet\\\" id=\\\"main\\\"></ion-router-outlet>\\n\"","export default \"<ion-app>\\n  <ion-router-outlet></ion-router-outlet>\\n</ion-app>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export default \".menu-separator {\\n  border-bottom: 1px solid lightgray;\\n}\\n\\n.menu-item-header {\\n  padding-top: 40px;\\n  padding-bottom: 20px;\\n  margin-left: 15px;\\n  margin-right: 15px;\\n  padding-left: 10px;\\n}\\n\\n.menu-item {\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  margin-left: 15px;\\n  margin-right: 15px;\\n  padding-left: 45px;\\n  text-indent: -35px;\\n}\\n\\n.menu-item img {\\n  vertical-align: middle;\\n}\\n\\n.menu-footer-item {\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  margin-left: 15px;\\n  margin-right: 15px;\\n  padding-left: 45px;\\n  text-indent: -35px;\\n}\\n\\n.menu-footer-item img {\\n  vertical-align: middle;\\n}\\n\\n.circle {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  font-size: 15px;\\n  text-align: center;\\n  line-height: 40px;\\n  float: left;\\n  margin-right: 10px;\\n}\\n\\n.circle-gray {\\n  background: #f3f3f3;\\n  color: black;\\n}\\n\\n.patient-name-in-menu {\\n  height: 40px;\\n  vertical-align: middle;\\n  line-height: 40px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9vcmRhcy93d3cvY29yb25hdmlydXMtYXBwLXJlYWwvYXBwLXBvbGljZS9zcmMvYXBwL2FwcC1jb250YWluZXIvYXBwLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvYXBwLWNvbnRhaW5lci9hcHAtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0NBQUE7QUNDRjs7QURFQTtFQUNFLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURHQTtFQUNFLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQ0FGOztBREVFO0VBQ0Usc0JBQUE7QUNBSjs7QURLQTtFQUNFLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtBQ0ZGOztBRElFO0VBQ0Usc0JBQUE7QUNGSjs7QURPQTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxrQkFBQTtBQ0pGOztBRE9BO0VBQ0UsbUJBQUE7RUFDQSxZQUFBO0FDSkY7O0FET0E7RUFDRSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxpQkFBQTtBQ0pGIiwiZmlsZSI6InNyYy9hcHAvYXBwLWNvbnRhaW5lci9hcHAtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1lbnUtc2VwYXJhdG9yIHtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcbn1cblxuLm1lbnUtaXRlbS1oZWFkZXIge1xuICBwYWRkaW5nLXRvcDogNDBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmctbGVmdDogMTBweDtcblxufVxuXG4ubWVudS1pdGVtIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICBtYXJnaW4tbGVmdDogMTVweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDQ1cHg7XG4gIHRleHQtaW5kZW50OiAtMzVweDtcblxuICBpbWcge1xuICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIH1cblxufVxuXG4ubWVudS1mb290ZXItaXRlbSB7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbiAgcGFkZGluZy1sZWZ0OiA0NXB4O1xuICB0ZXh0LWluZGVudDogLTM1cHg7XG5cbiAgaW1nIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB9XG5cbn1cblxuLmNpcmNsZSB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgZm9udC1zaXplOiAxNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4uY2lyY2xlLWdyYXkge1xuICBiYWNrZ3JvdW5kOiAjZjNmM2YzO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5wYXRpZW50LW5hbWUtaW4tbWVudSB7XG4gIGhlaWdodDogNDBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG59XG4iLCIubWVudS1zZXBhcmF0b3Ige1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgbGlnaHRncmF5O1xufVxuXG4ubWVudS1pdGVtLWhlYWRlciB7XG4gIHBhZGRpbmctdG9wOiA0MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7XG4gIG1hcmdpbi1yaWdodDogMTVweDtcbiAgcGFkZGluZy1sZWZ0OiAxMHB4O1xufVxuXG4ubWVudS1pdGVtIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICBtYXJnaW4tbGVmdDogMTVweDtcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4O1xuICBwYWRkaW5nLWxlZnQ6IDQ1cHg7XG4gIHRleHQtaW5kZW50OiAtMzVweDtcbn1cbi5tZW51LWl0ZW0gaW1nIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLm1lbnUtZm9vdGVyLWl0ZW0ge1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIG1hcmdpbi1sZWZ0OiAxNXB4O1xuICBtYXJnaW4tcmlnaHQ6IDE1cHg7XG4gIHBhZGRpbmctbGVmdDogNDVweDtcbiAgdGV4dC1pbmRlbnQ6IC0zNXB4O1xufVxuLm1lbnUtZm9vdGVyLWl0ZW0gaW1nIHtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLmNpcmNsZSB7XG4gIHdpZHRoOiA0MHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgZm9udC1zaXplOiAxNXB4O1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGxpbmUtaGVpZ2h0OiA0MHB4O1xuICBmbG9hdDogbGVmdDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4uY2lyY2xlLWdyYXkge1xuICBiYWNrZ3JvdW5kOiAjZjNmM2YzO1xuICBjb2xvcjogYmxhY2s7XG59XG5cbi5wYXRpZW50LW5hbWUtaW4tbWVudSB7XG4gIGhlaWdodDogNDBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgbGluZS1oZWlnaHQ6IDQwcHg7XG59Il19 */\"","import {Component, ViewEncapsulation} from '@angular/core';\nimport {MenuController} from '@ionic/angular';\nimport {Router} from '@angular/router';\nimport {PatientService} from '../shared/services/patient.service';\nimport {InAppBrowser} from '@ionic-native/in-app-browser/ngx';\n\n@Component({\n    selector: 'app-container',\n    templateUrl: 'app-container.component.html',\n    styleUrls: ['app-container.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AppContainerComponent {\n\n    public leaveStatus: number;\n\n    public patientName;\n\n    constructor(protected menu: MenuController,\n                protected router: Router,\n                protected patientService: PatientService,\n                protected iab: InAppBrowser) {\n\n\n    }\n\n    openMenu() {\n        this.menu.enable(true, 'menu');\n        this.menu.open('menu');\n    }\n\n    closeMenu() {\n        this.menu.close('menu');\n    }\n\n    public goToHome() {\n        this.closeMenu();\n        this.router.navigate(['/app/home']);\n    }\n\n    public goToRequestLeaveHome() {\n        this.closeMenu();\n        this.router.navigate(['/app/request-leave-home']);\n    }\n    public goToAutotest() {\n        this.closeMenu();\n        this.router.navigate(['/app/autotest']);\n    }\n\n    public goToCoronavirusInfo() {\n        this.closeMenu();\n        window.open(\"https://coronavirus.epidemixs.org/#/opening\", '_system');\n    }\n\n    public goToMyInfo() {\n        this.closeMenu();\n        this.router.navigate(['/app/my-info'])\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {PreloadAllModules, RouterModule, Routes} from '@angular/router';\nimport {AppContainerComponent} from './app-container/app-container.component';\n\nconst routes: Routes = [\n    {\n      path: 'splash',\n      children: [\n        {\n          path: '',\n          loadChildren: () =>\n              import('./splash/splash.module').then(m => m.SplashModule)\n        }\n      ]\n    },\n    {\n        path: 'register',\n        children: [\n            {\n                path: '',\n                loadChildren: () =>\n                    import('./register/register.module').then(m => m.RegisterModule)\n            }\n        ]\n    },\n    {\n        path: 'no-access',\n        children: [\n            {\n                path: '',\n                loadChildren: () =>\n                    import('./no-access/no-access.module').then(m => m.NoAccessModule)\n            }\n        ]\n    },\n    {\n        path: 'app',\n        component: AppContainerComponent,\n        children: [\n            {\n                path: 'home',\n                children: [\n                    {\n                        path: '',\n                        loadChildren: () =>\n                            import('./app-container/home/home.module').then(m => m.HomeModule)\n                    }\n                ]\n            },\n            {\n                path: 'qr-reader',\n                children: [\n                    {\n                        path: '',\n                        loadChildren: () =>\n                            import('./app-container/qr-reader/qr-reader.module').then(m => m.QrReaderModule)\n                    }\n                ]\n            },\n            {\n                path: 'qr-reader-result',\n                children: [\n                    {\n                        path: '',\n                        loadChildren: () =>\n                            import('./app-container/qr-reader-result/qr-reader-result.module').then(m => m.QrReaderResultModule)\n                    }\n                ]\n            }\n        ]\n    },\n    {\n      path: '',\n      redirectTo: '/splash',\n      pathMatch: 'full'\n    }\n];\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\nimport { Platform } from '@ionic/angular';\nimport { SplashScreen } from '@ionic-native/splash-screen/ngx';\nimport { StatusBar } from '@ionic-native/status-bar/ngx';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private platform: Platform,\n    private splashScreen: SplashScreen,\n    private statusBar: StatusBar\n  ) {\n    this.initializeApp();\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {RouteReuseStrategy} from '@angular/router';\n\nimport {IonicModule, IonicRouteStrategy} from '@ionic/angular';\nimport {SplashScreen} from '@ionic-native/splash-screen/ngx';\nimport {StatusBar} from '@ionic-native/status-bar/ngx';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {sdkConfigurationProvider} from './shared/sdkconfiguration.provider';\nimport {environment} from '../environments/environment';\nimport {PatientService} from './shared/services/patient.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {NativeStorage} from '@ionic-native/native-storage/ngx';\nimport {AppContainerComponent} from './app-container/app-container.component';\nimport {InAppBrowser} from '@ionic-native/in-app-browser/ngx';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner/ngx';\n\n@NgModule({\n    declarations: [AppComponent, AppContainerComponent],\n    entryComponents: [],\n    imports: [BrowserModule,\n        HttpClientModule,\n        IonicModule.forRoot({\n            mode: 'ios'\n        }),\n        AppRoutingModule],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        sdkConfigurationProvider,\n        PatientService,\n        NativeStorage,\n        InAppBrowser,\n        BarcodeScanner,\n        {provide: 'environment', useValue: environment},\n        {provide: RouteReuseStrategy, useClass: IonicRouteStrategy}\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { GeolocationControllerService } from './api/geolocationController.service';\nimport { LeaveRequestControllerService } from './api/leaveRequestController.service';\nimport { PatientControllerService } from './api/patientController.service';\nimport { PingControllerService } from './api/pingController.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    GeolocationControllerService,\n    LeaveRequestControllerService,\n    PatientControllerService,\n    PingControllerService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","export * from './geolocationController.service';\nimport { GeolocationControllerService } from './geolocationController.service';\nexport * from './leaveRequestController.service';\nimport { LeaveRequestControllerService } from './leaveRequestController.service';\nexport * from './patientController.service';\nimport { PatientControllerService } from './patientController.service';\nexport * from './pingController.service';\nimport { PingControllerService } from './pingController.service';\nexport const APIS = [GeolocationControllerService, LeaveRequestControllerService, PatientControllerService, PingControllerService];\n","/**\n * LoopBack Application\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Geolocation } from '../model/geolocation';\nimport { GeolocationWithRelations } from '../model/geolocationWithRelations';\nimport { LoopbackCount } from '../model/loopbackCount';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GeolocationControllerService {\n\n    protected basePath = 'http://localhost:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * @param where \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public geolocationControllerCount(where?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<LoopbackCount>;\n    public geolocationControllerCount(where?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LoopbackCount>>;\n    public geolocationControllerCount(where?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LoopbackCount>>;\n    public geolocationControllerCount(where?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (where !== undefined && where !== null) {\n            queryParameters = queryParameters.set('where', <any>where);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<LoopbackCount>(`${this.configuration.basePath}/geolocations/count`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public geolocationControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<Geolocation>;\n    public geolocationControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Geolocation>>;\n    public geolocationControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Geolocation>>;\n    public geolocationControllerCreate(requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<Geolocation>(`${this.configuration.basePath}/geolocations`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public geolocationControllerDeleteById(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public geolocationControllerDeleteById(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public geolocationControllerDeleteById(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public geolocationControllerDeleteById(id: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling geolocationControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/geolocations/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param filter \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public geolocationControllerFind(filter?: object, observe?: 'body', reportProgress?: boolean): Observable<Array<GeolocationWithRelations>>;\n    public geolocationControllerFind(filter?: object, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<GeolocationWithRelations>>>;\n    public geolocationControllerFind(filter?: object, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<GeolocationWithRelations>>>;\n    public geolocationControllerFind(filter?: object, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (filter !== undefined && filter !== null) {\n            queryParameters = queryParameters.set('filter', <any>filter);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<GeolocationWithRelations>>(`${this.configuration.basePath}/geolocations`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param filter \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public geolocationControllerFindById(id: string, filter?: object, observe?: 'body', reportProgress?: boolean): Observable<GeolocationWithRelations>;\n    public geolocationControllerFindById(id: string, filter?: object, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<GeolocationWithRelations>>;\n    public geolocationControllerFindById(id: string, filter?: object, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<GeolocationWithRelations>>;\n    public geolocationControllerFindById(id: string, filter?: object, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling geolocationControllerFindById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (filter !== undefined && filter !== null) {\n            queryParameters = queryParameters.set('filter', <any>filter);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<GeolocationWithRelations>(`${this.configuration.basePath}/geolocations/${encodeURIComponent(String(id))}`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public geolocationControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public geolocationControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public geolocationControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public geolocationControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling geolocationControllerReplaceById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/geolocations/${encodeURIComponent(String(id))}`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param where \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public geolocationControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<LoopbackCount>;\n    public geolocationControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LoopbackCount>>;\n    public geolocationControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LoopbackCount>>;\n    public geolocationControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (where !== undefined && where !== null) {\n            queryParameters = queryParameters.set('where', <any>where);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<LoopbackCount>(`${this.configuration.basePath}/geolocations`,\n            requestBody,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public geolocationControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public geolocationControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public geolocationControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public geolocationControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling geolocationControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/geolocations/${encodeURIComponent(String(id))}`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * LoopBack Application\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { LeaveRequest } from '../model/leaveRequest';\nimport { LeaveRequestWithRelations } from '../model/leaveRequestWithRelations';\nimport { LoopbackCount } from '../model/loopbackCount';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LeaveRequestControllerService {\n\n    protected basePath = 'http://localhost:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * @param where \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerCount(where?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<LoopbackCount>;\n    public leaveRequestControllerCount(where?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LoopbackCount>>;\n    public leaveRequestControllerCount(where?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LoopbackCount>>;\n    public leaveRequestControllerCount(where?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (where !== undefined && where !== null) {\n            queryParameters = queryParameters.set('where', <any>where);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<LoopbackCount>(`${this.configuration.basePath}/leave-requests/count`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<LeaveRequest>;\n    public leaveRequestControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LeaveRequest>>;\n    public leaveRequestControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LeaveRequest>>;\n    public leaveRequestControllerCreate(requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<LeaveRequest>(`${this.configuration.basePath}/leave-requests`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerDeleteById(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public leaveRequestControllerDeleteById(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public leaveRequestControllerDeleteById(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public leaveRequestControllerDeleteById(id: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling leaveRequestControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/leave-requests/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param filter \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerFind(filter?: object, observe?: 'body', reportProgress?: boolean): Observable<Array<LeaveRequestWithRelations>>;\n    public leaveRequestControllerFind(filter?: object, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<LeaveRequestWithRelations>>>;\n    public leaveRequestControllerFind(filter?: object, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<LeaveRequestWithRelations>>>;\n    public leaveRequestControllerFind(filter?: object, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (filter !== undefined && filter !== null) {\n            queryParameters = queryParameters.set('filter', <any>filter);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<LeaveRequestWithRelations>>(`${this.configuration.basePath}/leave-requests`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param filter \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerFindById(id: string, filter?: object, observe?: 'body', reportProgress?: boolean): Observable<LeaveRequestWithRelations>;\n    public leaveRequestControllerFindById(id: string, filter?: object, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LeaveRequestWithRelations>>;\n    public leaveRequestControllerFindById(id: string, filter?: object, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LeaveRequestWithRelations>>;\n    public leaveRequestControllerFindById(id: string, filter?: object, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling leaveRequestControllerFindById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (filter !== undefined && filter !== null) {\n            queryParameters = queryParameters.set('filter', <any>filter);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<LeaveRequestWithRelations>(`${this.configuration.basePath}/leave-requests/${encodeURIComponent(String(id))}`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param token \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerFindByToken(token: string, observe?: 'body', reportProgress?: boolean): Observable<LeaveRequestWithRelations>;\n    public leaveRequestControllerFindByToken(token: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LeaveRequestWithRelations>>;\n    public leaveRequestControllerFindByToken(token: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LeaveRequestWithRelations>>;\n    public leaveRequestControllerFindByToken(token: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (token === null || token === undefined) {\n            throw new Error('Required parameter token was null or undefined when calling leaveRequestControllerFindByToken.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<LeaveRequestWithRelations>(`${this.configuration.basePath}/leave-requests/token/${encodeURIComponent(String(token))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public leaveRequestControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public leaveRequestControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public leaveRequestControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling leaveRequestControllerReplaceById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/leave-requests/${encodeURIComponent(String(id))}`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param token \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerSetAtHome(token: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public leaveRequestControllerSetAtHome(token: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public leaveRequestControllerSetAtHome(token: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public leaveRequestControllerSetAtHome(token: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (token === null || token === undefined) {\n            throw new Error('Required parameter token was null or undefined when calling leaveRequestControllerSetAtHome.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/leave-requests/token/${encodeURIComponent(String(token))}/set-at-home`,\n            null,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param token \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerSetOutOfHome(token: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public leaveRequestControllerSetOutOfHome(token: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public leaveRequestControllerSetOutOfHome(token: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public leaveRequestControllerSetOutOfHome(token: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (token === null || token === undefined) {\n            throw new Error('Required parameter token was null or undefined when calling leaveRequestControllerSetOutOfHome.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/leave-requests/token/${encodeURIComponent(String(token))}/set-out-home`,\n            null,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param where \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<LoopbackCount>;\n    public leaveRequestControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LoopbackCount>>;\n    public leaveRequestControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LoopbackCount>>;\n    public leaveRequestControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (where !== undefined && where !== null) {\n            queryParameters = queryParameters.set('where', <any>where);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<LoopbackCount>(`${this.configuration.basePath}/leave-requests`,\n            requestBody,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public leaveRequestControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public leaveRequestControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public leaveRequestControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public leaveRequestControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling leaveRequestControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/leave-requests/${encodeURIComponent(String(id))}`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * LoopBack Application\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { LoopbackCount } from '../model/loopbackCount';\nimport { Patient } from '../model/patient';\nimport { PatientWithRelations } from '../model/patientWithRelations';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatientControllerService {\n\n    protected basePath = 'http://localhost:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * @param where \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patientControllerCount(where?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<LoopbackCount>;\n    public patientControllerCount(where?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LoopbackCount>>;\n    public patientControllerCount(where?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LoopbackCount>>;\n    public patientControllerCount(where?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (where !== undefined && where !== null) {\n            queryParameters = queryParameters.set('where', <any>where);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<LoopbackCount>(`${this.configuration.basePath}/patients/count`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patientControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<Patient>;\n    public patientControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Patient>>;\n    public patientControllerCreate(requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Patient>>;\n    public patientControllerCreate(requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.post<Patient>(`${this.configuration.basePath}/patients`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patientControllerDeleteById(id: string, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public patientControllerDeleteById(id: string, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public patientControllerDeleteById(id: string, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public patientControllerDeleteById(id: string, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling patientControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/patients/${encodeURIComponent(String(id))}`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param filter \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patientControllerFind(filter?: object, observe?: 'body', reportProgress?: boolean): Observable<Array<PatientWithRelations>>;\n    public patientControllerFind(filter?: object, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<PatientWithRelations>>>;\n    public patientControllerFind(filter?: object, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<PatientWithRelations>>>;\n    public patientControllerFind(filter?: object, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (filter !== undefined && filter !== null) {\n            queryParameters = queryParameters.set('filter', <any>filter);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<Array<PatientWithRelations>>(`${this.configuration.basePath}/patients`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param filter \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patientControllerFindById(id: string, filter?: object, observe?: 'body', reportProgress?: boolean): Observable<PatientWithRelations>;\n    public patientControllerFindById(id: string, filter?: object, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PatientWithRelations>>;\n    public patientControllerFindById(id: string, filter?: object, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PatientWithRelations>>;\n    public patientControllerFindById(id: string, filter?: object, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling patientControllerFindById.');\n        }\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (filter !== undefined && filter !== null) {\n            queryParameters = queryParameters.set('filter', <any>filter);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<PatientWithRelations>(`${this.configuration.basePath}/patients/${encodeURIComponent(String(id))}`,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patientControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public patientControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public patientControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public patientControllerReplaceById(id: string, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling patientControllerReplaceById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.put<any>(`${this.configuration.basePath}/patients/${encodeURIComponent(String(id))}`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param where \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patientControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<LoopbackCount>;\n    public patientControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<LoopbackCount>>;\n    public patientControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<LoopbackCount>>;\n    public patientControllerUpdateAll(where?: { [key: string]: object; }, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let queryParameters = new HttpParams({encoder: this.encoder});\n        if (where !== undefined && where !== null) {\n            queryParameters = queryParameters.set('where', <any>where);\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<LoopbackCount>(`${this.configuration.basePath}/patients`,\n            requestBody,\n            {\n                params: queryParameters,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param requestBody \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public patientControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'body', reportProgress?: boolean): Observable<any>;\n    public patientControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<any>>;\n    public patientControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<any>>;\n    public patientControllerUpdateById(id: string, requestBody?: { [key: string]: object; }, observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling patientControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/patients/${encodeURIComponent(String(id))}`,\n            requestBody,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * LoopBack Application\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0.0\n * \n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { PingResponse } from '../model/pingResponse';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PingControllerService {\n\n    protected basePath = 'http://localhost:3000';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n\n    /**\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public pingControllerPing(observe?: 'body', reportProgress?: boolean): Observable<PingResponse>;\n    public pingControllerPing(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<PingResponse>>;\n    public pingControllerPing(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<PingResponse>>;\n    public pingControllerPing(observe: any = 'body', reportProgress: boolean = false ): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        // to determine the Accept header\n        const httpHeaderAccepts: string[] = [\n            'application/json'\n        ];\n        const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        return this.httpClient.get<PingResponse>(`${this.configuration.basePath}/ping`,\n            {\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nexport interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import {Configuration} from './sdk';\n\nconst sdkConfigurationFactory = (environment: any) => {\n    const returnValue = new Configuration();\n    returnValue.basePath = environment.apiBasePath;\n\n    return returnValue;\n};\n\nexport let sdkConfigurationProvider = { provide: Configuration,\n      useFactory: sdkConfigurationFactory,\n      deps: ['environment']\n    };\n\n","import {Inject, Injectable} from '@angular/core';\nimport {GeolocationControllerService, GeolocationWithRelations, PatientControllerService, PatientWithRelations} from '../sdk';\nimport {ApiFilter} from '../utils/apifilter';\nimport {BehaviorSubject, Subject, Subscribable} from 'rxjs';\nimport {NativeStorage} from '@ionic-native/native-storage/ngx';\nimport {Router} from '@angular/router';\nimport {BackgroundGeolocation} from '@ionic-native/background-geolocation';\nimport {\n    BackgroundGeolocationAuthorizationStatus,\n    BackgroundGeolocationEvents,\n    BackgroundGeolocationResponse\n} from '@ionic-native/background-geolocation/ngx';\nimport {Platform} from '@ionic/angular';\n\n\n@Injectable()\nexport class PatientService {\n\n    get patient(): PatientWithRelations {\n        return this._patient;\n    }\n\n    set patient(value: PatientWithRelations) {\n        this._patient = value;\n    }\n\n    protected activatedBackgroundGeolocation = false;\n\n    protected patientToken: string = null;\n    private _patient: PatientWithRelations = null;\n\n    public patientLoaded$: BehaviorSubject<any> = new BehaviorSubject<any>(false);\n\n    public static PATIENT_TOKEN_KEY = 'patientToken';\n\n    constructor(protected patientController: PatientControllerService,\n                @Inject('environment') protected environment,\n                protected geolocationControllerService: GeolocationControllerService,\n                protected router: Router,\n                public platform: Platform,\n                protected nativeStorage: NativeStorage) {\n\n        platform.ready().then(() => {\n            if (1 == 1 || this.environment.production) {\n                this.nativeStorage.getItem(PatientService.PATIENT_TOKEN_KEY)\n                    .then(\n                        data => {\n                            this.loadPatient(data);\n                        }\n                    );\n            } else {\n                this.loadPatient('5e7497828d970a10056ef022');\n            }\n        });\n\n    }\n\n    protected loadPatient(patientToken) {\n        this.setPatientToken(patientToken).subscribe(success => {\n            if (success) {\n                this.patientLoaded$.next(true);\n            } else {\n                this.router.navigate(['register']);\n            }\n        });\n    }\n\n    public setPatientToken(patientToken: string) {\n\n        let returnValue = new Subject();\n\n        this.patientController.patientControllerFindById(patientToken).subscribe(existingPatient => {\n\n            if (existingPatient != null) {\n                this._patient = existingPatient;\n                this.patientToken = patientToken;\n                returnValue.next(true);\n                this.activateBackgroundGeolocation();\n            } else {\n                returnValue.next(false);\n            }\n\n        });\n\n        return returnValue;\n\n    }\n\n    public register(patient: PatientWithRelations): Subscribable<any> {\n\n        let returnValue = new Subject();\n\n        this.patientController.patientControllerFind(new ApiFilter({where: {documentNumber: {'eq': patient.documentNumber}}})).subscribe(existingPatient => {\n\n            if (existingPatient.length > 0) {\n                returnValue.next(false);\n            } else {\n\n                this.patientController.patientControllerCreate(patient).subscribe(newPatient => {\n                    this.loadPatient(newPatient.id);\n                    this.patientLoaded$.subscribe(loaded => {\n                        if(loaded) {\n                            returnValue.next(newPatient);\n                        }\n                    })\n                });\n            }\n        });\n\n        return returnValue;\n    }\n\n    public getCheckStatusUrl() {\n        return 'https://api.coronapp.es/check-status/' + this.patientToken;\n    }\n\n    public update(patient: PatientWithRelations): Subscribable<any> {\n\n        let returnValue = new Subject();\n\n        this.patientController.patientControllerUpdateById(patient.id, patient).subscribe(exitingPatient => {\n            this._patient = patient;\n            returnValue.next(true);\n        });\n\n        return returnValue;\n    }\n\n    public activateBackgroundGeolocation() {\n\n        if(!this.activatedBackgroundGeolocation && this.patient != null && this.patient.id != null) {\n\n            this.activatedBackgroundGeolocation = true;\n\n            BackgroundGeolocation.configure({\n                desiredAccuracy: 10, //10 means MEDIUM\n                stationaryRadius: 50,\n                distanceFilter: 50,\n                interval: 60000,\n                fastestInterval: 60000,\n                activitiesInterval: 60000,\n                notificationTitle: 'Tu posición es importante',\n                notificationText: 'Al informar sobre tu posición ayudas mucho a combatir el CORONAVIRUS',\n                debug: false,\n                stopOnTerminate: false, // enable this to clear background location settings when the app terminates\n            });\n\n            BackgroundGeolocation.on(BackgroundGeolocationEvents.location).subscribe((location: BackgroundGeolocationResponse) => {\n\n                console.log(location);\n\n                // handle your locations here\n                // to perform long running operation on iOS\n                // you need to create background task\n                BackgroundGeolocation.startTask().then(taskKey => {\n\n                    let geolocation: GeolocationWithRelations = new class implements GeolocationWithRelations {\n                        [key: string]: object | any;\n\n                        accuracy: number;\n                        altitude: number;\n                        bearing: number;\n                        id: string;\n                        latitude: number;\n                        longitude: number;\n                        speed: number;\n                        updated: Date;\n                        userId: string;\n                    };\n\n                    geolocation.userId = this.patient.id;\n                    geolocation.latitude = location.latitude;\n                    geolocation.longitude = location.longitude;\n                    geolocation.accuracy = location.accuracy;\n                    geolocation.speed = location.speed;\n                    geolocation.bearing = location.bearing;\n                    geolocation.altitude = location.altitude;\n\n                    this.geolocationControllerService.geolocationControllerCreate(geolocation).subscribe(createdGeolocation => {\n                        //nothing to do\n                    });\n\n                    // execute long running task\n                    // eg. ajax post location\n                    // IMPORTANT: task has to be ended by endTask\n                    BackgroundGeolocation.endTask(taskKey);\n                });\n            });\n\n            BackgroundGeolocation.checkStatus().then(status => {\n\n                if (status.authorization !== BackgroundGeolocationAuthorizationStatus.AUTHORIZED) {\n                    // we need to set delay or otherwise alert may not be shown\n                    setTimeout(() => {\n                        var showSettings = confirm('Al informar sobre tu posición ayudas mucho a combatir el CORONAVIRUS. Te gustaría cambiar la configuración de la app?');\n                        if (showSettings) {\n                            return BackgroundGeolocation.showAppSettings();\n                        }\n                    }, 1000);\n                }\n\n                // you don't need to check status before start (this is just the example)\n                if (!status.isRunning) {\n                    BackgroundGeolocation.start(); //triggers start on start event\n                }\n            });\n\n        }\n\n    }\n\n\n}\n","\n\nexport class ApiFilter {\n\n    protected filter = {};\n\n    constructor(filter: any) {\n        this.filter = filter;\n    }\n\n    public toString = () : string => {\n        console.log(JSON.stringify(this.filter));\n        return JSON.stringify(this.filter);\n\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBasePath: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}